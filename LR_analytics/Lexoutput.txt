                                 TOKEN STREAM
-------------------------------------------------------------------
Line	Content			Type
2	int			[INT]
2	program			[ID]
2	(			[LPAREN]
2	int			[INT]
2	a			[ID]
2	,			[COMMA]
2	int			[INT]
2	b			[ID]
2	,			[COMMA]
2	int			[INT]
2	c			[ID]
2	)			[RPAREN]
3	{			[LBBRACKET]
4	int			[INT]
4	i			[ID]
4	;			[SEMI]
5	int			[INT]
5	j			[ID]
5	;			[SEMI]
6	i			[ID]
6	=			[ASSIGN]
6	0			[NUM]
6	;			[SEMI]
7	if			[IF]
7	(			[LPAREN]
7	a			[ID]
7	>			[GT]
7	(			[LPAREN]
7	b			[ID]
7	+			[PLUS]
7	c			[ID]
7	)			[RPAREN]
7	)			[RPAREN]
8	{			[LBBRACKET]
9	j			[ID]
9	=			[ASSIGN]
9	a			[ID]
9	+			[PLUS]
9	(			[LPAREN]
9	b			[ID]
9	*			[MUL]
9	c			[ID]
9	+			[PLUS]
9	1			[NUM]
9	)			[RPAREN]
9	;			[SEMI]
10	}			[RBBRACKET]
11	else			[ELSE]
12	{			[LBBRACKET]
13	j			[ID]
13	=			[ASSIGN]
13	a			[ID]
13	;			[SEMI]
14	}			[RBBRACKET]
15	while			[WHILE]
15	(			[LPAREN]
15	i			[ID]
15	<=			[LE]
15	100			[NUM]
15	)			[RPAREN]
16	{			[LBBRACKET]
17	i			[ID]
17	=			[ASSIGN]
17	i			[ID]
17	+			[PLUS]
17	3			[NUM]
17	;			[SEMI]
18	}			[RBBRACKET]
19	return			[RETURN]
19	i			[ID]
19	;			[SEMI]
20	}			[RBBRACKET]
22	int			[INT]
22	demo			[ID]
22	(			[LPAREN]
22	int			[INT]
22	a			[ID]
22	)			[RPAREN]
23	{			[LBBRACKET]
24	a			[ID]
24	=			[ASSIGN]
24	a			[ID]
24	+			[PLUS]
24	2			[NUM]
24	;			[SEMI]
25	return			[RETURN]
25	a			[ID]
25	*			[MUL]
25	2			[NUM]
25	;			[SEMI]
26	}			[RBBRACKET]
28	void			[VOID]
28	main			[ID]
28	(			[LPAREN]
28	void			[VOID]
28	)			[RPAREN]
29	{			[LBBRACKET]
30	int			[INT]
30	a			[ID]
30	[			[LeftSquareBracket]
30	2			[NUM]
30	]			[RightSquareBracket]
30	[			[LeftSquareBracket]
30	2			[NUM]
30	]			[RightSquareBracket]
30	;			[SEMI]
31	a			[ID]
31	[			[LeftSquareBracket]
31	0			[NUM]
31	]			[RightSquareBracket]
31	[			[LeftSquareBracket]
31	0			[NUM]
31	]			[RightSquareBracket]
31	=			[ASSIGN]
31	3			[NUM]
31	;			[SEMI]
32	a			[ID]
32	[			[LeftSquareBracket]
32	0			[NUM]
32	]			[RightSquareBracket]
32	[			[LeftSquareBracket]
32	1			[NUM]
32	]			[RightSquareBracket]
32	=			[ASSIGN]
32	a			[ID]
32	[			[LeftSquareBracket]
32	0			[NUM]
32	]			[RightSquareBracket]
32	[			[LeftSquareBracket]
32	0			[NUM]
32	]			[RightSquareBracket]
32	+			[PLUS]
32	1			[NUM]
32	;			[SEMI]
33	a			[ID]
33	[			[LeftSquareBracket]
33	1			[NUM]
33	]			[RightSquareBracket]
33	[			[LeftSquareBracket]
33	0			[NUM]
33	]			[RightSquareBracket]
33	=			[ASSIGN]
33	a			[ID]
33	[			[LeftSquareBracket]
33	0			[NUM]
33	]			[RightSquareBracket]
33	[			[LeftSquareBracket]
33	1			[NUM]
33	]			[RightSquareBracket]
33	+			[PLUS]
33	1			[NUM]
33	;			[SEMI]
34	a			[ID]
34	[			[LeftSquareBracket]
34	1			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	1			[NUM]
34	]			[RightSquareBracket]
34	=			[ASSIGN]
34	program			[ID]
34	(			[LPAREN]
34	a			[ID]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	,			[COMMA]
34	a			[ID]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	1			[NUM]
34	]			[RightSquareBracket]
34	,			[COMMA]
34	demo			[ID]
34	(			[LPAREN]
34	a			[ID]
34	[			[LeftSquareBracket]
34	1			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	)			[RPAREN]
34	)			[RPAREN]
34	;			[SEMI]
36	return			[RETURN]
36	;			[SEMI]
37	}			[RBBRACKET]
